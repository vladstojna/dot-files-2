---
- name: Get service name of container
  delegate_to: "{{ container.hostname }}"
  loop: "{{ container.ids }}"
  loop_control:
    loop_var: container_id
    label: "{{ container_id }}"
  shell: >
    docker container inspect
    --format {%raw%}'{{index .Config.Labels "com.docker.swarm.service.name"}}'{%endraw%}
    {{ container_id }}
  register: service_name_result
  changed_when: false

- name: Provision replica set
  delegate_to: "{{ container.hostname }}"
  loop: >
    {{ container.ids | zip(service_name_result.results | map(attribute='stdout') | list) | list }}
  loop_control:
    loop_var: cont_svc_pair
    label: "{{ cont_svc_pair }}"
  shell: >
    docker exec {{ cont_svc_pair.0 }} mongosh
    --quiet
    --eval 'rs.initiate();
    cfg = rs.conf();
    cfg.members[0].host = "{{ cont_svc_pair.1 }}";
    rs.reconfig(cfg);
    rs.status()'
  register: provision_replset_result
  changed_when:
    - provision_replset_result.rc == 0
  failed_when:
    - provision_replset_result.rc != 0
    - '"MongoServerError: already initialized" not in provision_replset_result.stderr'
